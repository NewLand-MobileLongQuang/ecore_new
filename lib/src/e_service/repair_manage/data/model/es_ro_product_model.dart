
import '../../domain/entities/es_ro_product.dart';

class ES_ROProductModel extends ES_ROProduct {
  ES_ROProductModel({required super.OrgID, required super.ProductCode, required super.NetworkID, required super.ProductLevelSys, required super.ProductCodeUser, required super.BrandCode, required super.ProductType, required super.ProductGrpCode, required super.ProductName, required super.ProductNameEN, required super.ProductBarCode, required super.ProductCodeNetwork, required super.ProductCodeBase, required super.ProductCodeRoot, required super.ProductImagePathList, required super.ProductFilePathList, required super.FlagSerial, required super.FlagLot, required super.ValConvert, required super.VATRateCode, required super.UnitCode, required super.FlagSell, required super.FlagBuy, required super.UPBuy, required super.UPSell, required super.QtyMaxSt, required super.QtyMinSt, required super.QtyEffSt, required super.ListOfPrdDynamicFieldValue, required super.ProductStd, required super.ProductExpiry, required super.ProductQuyCach, required super.ProductMnfUrl, required super.ProductIntro, required super.ProductUserGuide, required super.ProductDrawing, required super.ProductOrigin, required super.FlagFG, required super.DTimeUsed, required super.CustomField1, required super.CustomField2, required super.CustomField3, required super.CustomField4, required super.CustomField5, required super.CreateDTimeUTC, required super.CreateBy, required super.LUDTimeUTC, required super.LUBy, required super.FlagActive, required super.Remark, required super.LogLUDTimeUTC, required super.LogLUBy, required super.ListAttribute, required super.ListBOM, required super.ProductDelType, required super.mb_BrandName, required super.mpg_ProductGrpName, required super.mpt_ProductType, required super.mpt_ProductTypeName, required super.mvat_VATRate, required super.mu_UnitName, required super.SolutionCode, required super.FunctionActionType, required super.ThirdPartyInfo, required super.GTIN, required super.SSCCType, required super.ProductImagePathDefault, required super.Setting, required super.CustomDataDict});

  factory ES_ROProductModel.fromMap(Map<String, dynamic> json) {
    return ES_ROProductModel (
      OrgID: json['OrgID'] as String? ?? '',
      ProductCode: json['ProductCode'] as String? ?? '',
      NetworkID: json['NetworkID'] as String? ?? '',
      ProductLevelSys: json['ProductLevelSys'] as String? ?? '',
      ProductCodeUser: json['ProductCodeUser'] as String? ?? '',
      BrandCode: json['BrandCode'] as String? ?? '',
      ProductType: json['ProductType'] as String? ?? '',
      ProductGrpCode: json['ProductGrpCode'] as String? ?? '',
      ProductName: json['ProductName'] as String? ?? '',
      ProductNameEN: json['ProductNameEN'] as String? ?? '',
      ProductBarCode: json['ProductBarCode'] as String? ?? '',
      ProductCodeNetwork: json['ProductCodeNetwork'] as String? ?? '',
      ProductCodeBase: json['ProductCodeBase'] as String? ?? '',
      ProductCodeRoot: json['ProductCodeRoot'] as String? ?? '',
      ProductImagePathList: json['ProductImagePathList'] as String? ?? '',
      ProductFilePathList: json['ProductFilePathList'] as String? ?? '',
      FlagSerial: json['FlagSerial'] as String? ?? '',
      FlagLot: json['FlagLot'] as String? ?? '',
      ValConvert: json['ValConvert'] as double? ?? 0.0,
      VATRateCode: json['VATRateCode'] as String? ?? '',
      UnitCode: json['UnitCode'] as String? ?? '',
      FlagSell: json['FlagSell'] as String? ?? '',
      FlagBuy: json['FlagBuy'] as String? ?? '',
      UPBuy: json['UPBuy'] as double? ?? 0.0,
      UPSell: json['UPSell'] as double? ?? 0.0,
      QtyMaxSt: json['QtyMaxSt'] as double? ?? 0.0,
      QtyMinSt: json['QtyMinSt'] as double? ?? 0.0,
      QtyEffSt: json['QtyEffSt'] as double? ?? 0.0,
      ListOfPrdDynamicFieldValue: json['ListOfPrdDynamicFieldValue'] as String? ?? '',
      ProductStd: json['ProductStd'] as String? ?? '',
      ProductExpiry: json['ProductExpiry'] as String? ?? '',
      ProductQuyCach: json['ProductQuyCach'] as String? ?? '',
      ProductMnfUrl: json['ProductMnfUrl'] as String? ?? '',
      ProductIntro: json['ProductIntro'] as String? ?? '',
      ProductUserGuide: json['ProductUserGuide'] as String? ?? '',
      ProductDrawing: json['ProductDrawing'] as String? ?? '',
      ProductOrigin: json['ProductOrigin'] as String? ?? '',
      FlagFG: json['FlagFG'] as String? ?? '',
      DTimeUsed: json['DTimeUsed'] as String? ?? '',
      CustomField1: json['CustomField1'] as String? ?? '',
      CustomField2: json['CustomField2'] as String? ?? '',
      CustomField3: json['CustomField3'] as String? ?? '',
      CustomField4: json['CustomField4'] as String? ?? '',
      CustomField5: json['CustomField5'] as String? ?? '',
      CreateDTimeUTC: json['CreateDTimeUTC'] as String? ?? '',
      CreateBy: json['CreateBy'] as String? ?? '',
      LUDTimeUTC: json['LUDTimeUTC'] as String? ?? '',
      LUBy: json['LUBy'] as String? ?? '',
      FlagActive: json['FlagActive'] as String? ?? '',
      Remark: json['Remark'] as String? ?? '',
      LogLUDTimeUTC: json['LogLUDTimeUTC'] as String? ?? '',
      LogLUBy: json['LogLUBy'] as String? ?? '',
      ListAttribute: json['ListAttribute'] as String? ?? '',
      ListBOM: json['ListBOM'] as String? ?? '',
      ProductDelType: json['ProductDelType'] as String? ?? '',
      mb_BrandName: json['mb_BrandName'] as String? ?? '',
      mpg_ProductGrpName: json['mpg_ProductGrpName'] as String? ?? '',
      mpt_ProductType: json['mpt_ProductType'] as String? ?? '',
      mpt_ProductTypeName: json['mpt_ProductTypeName'] as String? ?? '',
      mvat_VATRate: json['mvat_VATRate'] as double? ?? 0.0,
      mu_UnitName: json['mu_UnitName'] as String? ?? '',
      SolutionCode: json['SolutionCode'] as String? ?? '',
      FunctionActionType: json['FunctionActionType'] as String? ?? '',
      ThirdPartyInfo: json['ThirdPartyInfo'] as String? ?? '',
      GTIN: json['GTIN'] as String? ?? '',
      SSCCType: json['SSCCType'] as String? ?? '',
      ProductImagePathDefault: json['ProductImagePathDefault'] as String? ?? '',
      Setting: json['Setting'] as String? ?? '',
      CustomDataDict: json['CustomDataDict'] as Map<String, dynamic>? ?? {}
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'OrgID': super.OrgID,
      'ProductCode': super.ProductCode,
      'NetworkID': super.NetworkID,
      'ProductLevelSys': super.ProductLevelSys,
      'ProductCodeUser': super.ProductCodeUser,
      'BrandCode': super.BrandCode,
      'ProductType': super.ProductType,
      'ProductGrpCode': super.ProductGrpCode,
      'ProductName': super.ProductName,
      'ProductNameEN': super.ProductNameEN,
      'ProductBarCode': super.ProductBarCode,
      'ProductCodeNetwork': super.ProductCodeNetwork,
      'ProductCodeBase': super.ProductCodeBase,
      'ProductCodeRoot': super.ProductCodeRoot,
      'ProductImagePathList': super.ProductImagePathList,
      'ProductFilePathList': super.ProductFilePathList,
      'FlagSerial': super.FlagSerial,
      'FlagLot': super.FlagLot,
      'ValConvert': super.ValConvert,
      'VATRateCode': super.VATRateCode,
      'UnitCode': super.UnitCode,
      'FlagSell': super.FlagSell,
      'FlagBuy': super.FlagBuy,
      'UPBuy': super.UPBuy,
      'UPSell': super.UPSell,
      'QtyMaxSt': super.QtyMaxSt,
      'QtyMinSt': super.QtyMinSt,
      'QtyEffSt': super.QtyEffSt,
      'ListOfPrdDynamicFieldValue': super.ListOfPrdDynamicFieldValue,
      'ProductStd': super.ProductStd,
      'ProductExpiry': super.ProductExpiry,
      'ProductQuyCach': super.ProductQuyCach,
      'ProductMnfUrl': super.ProductMnfUrl,
      'ProductIntro': super.ProductIntro,
      'ProductUserGuide': super.ProductUserGuide,
      'ProductDrawing': super.ProductDrawing,
      'ProductOrigin': super.ProductOrigin,
      'FlagFG': super.FlagFG,
      'DTimeUsed': super.DTimeUsed,
      'CustomField1': super.CustomField1,
      'CustomField2': super.CustomField2,
      'CustomField3': super.CustomField3,
      'CustomField4': super.CustomField4,
      'CustomField5': super.CustomField5,
      'CreateDTimeUTC': super.CreateDTimeUTC,
      'CreateBy': super.CreateBy,
      'LUDTimeUTC': super.LUDTimeUTC,
      'LUBy': super.LUBy,
      'FlagActive': super.FlagActive,
      'Remark': super.Remark,
      'LogLUDTimeUTC': super.LogLUDTimeUTC,
      'LogLUBy': super.LogLUBy,
      'ListAttribute': super.ListAttribute,
      'ListBOM': super.ListBOM,
      'ProductDelType': super.ProductDelType,
      'mb_BrandName': super.mb_BrandName,
      'mpg_ProductGrpName': super.mpg_ProductGrpName,
      'mpt_ProductType': super.mpt_ProductType,
      'mpt_ProductTypeName': super.mpt_ProductTypeName,
      'mvat_VATRate': super.mvat_VATRate,
      'mu_UnitName': super.mu_UnitName,
      'SolutionCode': super.SolutionCode,
      'FunctionActionType': super.FunctionActionType,
      'ThirdPartyInfo': super.ThirdPartyInfo,
      'GTIN': super.GTIN,
      'SSCCType': super.SSCCType,
      'ProductImagePathDefault': super.ProductImagePathDefault,
      'Setting': super.Setting,
      'CustomDataDict': super.CustomDataDict,
    };
  }
}